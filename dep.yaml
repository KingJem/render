

apiVersion: extensions/v1beta1   #接口版本
kind: Deployment                 #接口类型
metadata:
  name: jw     #Deployment名称
  namespace: jw          #命名空间
  labels:
    app: jw-render             #标签
spec:
  replicas: 1
  strategy:
    rollingUpdate:  ##由于replicas为3,则整个升级,pod个数在2-4个之间
      maxSurge: 1      #滚动升级时会先启动1个pod
      maxUnavailable: 1 #滚动升级时允许的最大Unavailable的pod个数
  template:
    metadata:
      labels:
        app: jw-render   #模板名称必填
    sepc: #定义容器模板，该模板可以包含多个容器
      containers:
        - name: jw-render                                                            #镜像名称
          image: render:test #镜像地址
          command: [ "npm","start" ]    #启动命令
          args:                                                                #启动参数
#            - '-storage.local.retention=$(STORAGE_RETENTION)'
#            - '-storage.local.memory-chunks=$(STORAGE_MEMORY_CHUNKS)'
#            - '-config.file=/etc/prometheus/prometheus.yml'
#            - '-alertmanager.url=http://alertmanager:9093/alertmanager'
#            - '-web.external-url=$(EXTERNAL_URL)'
          #如果command和args均没有写，那么用Docker默认的配置。
          #如果command写了，但args没有写，那么Docker默认的配置会被忽略而且仅仅执行.yaml文件的command（不带任何参数的）。
          #如果command没写，但args写了，那么Docker默认配置的ENTRYPOINT的命令行会被执行，但是调用的参数是.yaml中的args。
          #如果如果command和args都写了，那么Docker默认的配置被忽略，使用.yaml的配置。
          imagePullPolicy: IfNotPresent  #如果不存在则拉取
          livenessProbe:       #表示container是否处于live状态。如果LivenessProbe失败，LivenessProbe将会通知kubelet对应的container不健康了。随后kubelet将kill掉container，并根据RestarPolicy进行进一步的操作。默认情况下LivenessProbe在第一次检测之前初始化值为Success，如果container没有提供LivenessProbe，则也认为是Success；
            httpGet:
              path: /health #如果没有心跳检测接口就为/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60 ##启动后延时多久开始运行检测
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health #如果没有心跳检测接口就为/
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 30 ##启动后延时多久开始运行检测
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          resources:              ##CPU内存限制
            requests:
              cpu: 2
              memory: 2048Mi
            limits:
              cpu: 2
              memory: 2048Mi
          env:               ##通过环境变量的方式，直接传递pod=自定义Linux OS环境变量
            - name: PORT     #本地Key
              value: 8000

          ports:
            - name: http
              containerPort: 8080 #对service暴露端口

